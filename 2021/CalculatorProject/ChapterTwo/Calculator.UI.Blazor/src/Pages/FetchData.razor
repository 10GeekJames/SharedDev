@page "/fetchdata"
@attribute [Authorize]

@using Microsoft.AspNetCore.Authorization;
@using Calculator.UI.Blazor.Services;

@inject WeatherForecastHttpClient Http
@inject Microsoft.Extensions.Localization.IStringLocalizer<FetchData> Localize

<h1>@Localize["Weather forecast"]</h1>

<p>@Localize["This component demonstrates fetching data from the server"]</p>

@if (forecasts == null)
{
    <p><em>@Localize["Loading"]</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>@Localize["Date"]</th>
                <th>@Localize["Temp"] (C)</th>
                <th>@Localize["Temp"] (F)</th>
                <th>@Localize["Summary"]</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in forecasts)
            {
                <tr>
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>@forecast.TemperatureC</td>
                    <td>@forecast.TemperatureF</td>
                    <td>@forecast.Summary</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<WeatherForecast> forecasts;

    protected override async Task OnInitializedAsync()
    {
        forecasts = await Http.GetWeatherForecastsAsync();
    }
}
